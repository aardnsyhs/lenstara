// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String?   @unique
  name      String?
  image     String?
  accounts  Account[]
  sessions  Session[]
  boards    Board[]
  createdAt DateTime  @default(now())
}

model Board {
  id        String      @id @default(cuid())
  title     String
  notes     String?
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  items     BoardItem[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model BoardItem {
  id        String   @id @default(cuid())
  board     Board    @relation(fields: [boardId], references: [id])
  boardId   String
  photoId   String
  alt       String?
  thumbUrl  String
  fullUrl   String
  author    String?
  colorHex  String?
  position  Int      @default(0)
  createdAt DateTime @default(now())
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
